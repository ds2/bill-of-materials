name: build Site

on:
  push:
    branches:
      - develop

env:
  RUST_BACKTRACE: full
  CI: "1"
  CARGO_TERM_COLOR: always

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}-cargo
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checking out current branch for this build
        uses: actions/checkout@v4
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "adopt"
      - name: setup maven repo
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Cache SonarCloud packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Build with Maven
        run: mvn -s ci-settings.xml --batch-mode --update-snapshots clean site:site site:stage-deploy -DstagingSiteURL=file://$(pwd)/tmp -DtopSiteURL=https://www.ds2.dev/
        env:
          CI_USERNAME: ${{secrets.CI_USERNAME}}
          CI_PASSWORD: ${{secrets.CI_PASSWORD}}
      - name: copy to docs dir
        run: |
          mkdir -p docs || true
          cp -r target/site/* docs/
          find docs -maxdepth 2
      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: docs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: deploy to Artifactory
        run: mvn -s ci-settings.xml --batch-mode deploy
        env:
          CI_USERNAME: ${{secrets.CI_USERNAME}}
          CI_PASSWORD: ${{secrets.CI_PASSWORD}}
          CI_AZURE_STORAGEACC: ${{secrets.CI_AZURE_STORAGEACC}}
          CI_AZURE_SECKEY: ${{secrets.CI_AZURE_SECKEY}}
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Dsonar.projectKey=ds2_bill-of-materials
