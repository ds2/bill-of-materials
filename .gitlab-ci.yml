image: maven:latest

stages:
  - build
  - test
  - release
  - deploy

variables:
  MAVEN_CLI_OPTS: "-s ci-settings.xml --batch-mode --errors --fail-at-end --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository -Dhttps.protocols=TLSv1.2 -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN -Dorg.slf4j.simpleLogger.showDateTime=true -Djava.awt.headless=true"

cache:
  key: "${CI_COMMIT_REF_SLUG}" # the branch name
  paths:
    - .m2/repository
    - target

build:
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS compile

test:
  stage: test
  needs:
    - build
  script:
    - mvn $MAVEN_CLI_OPTS test

deploy:
  stage: deploy
  needs:
    - test
  script:
    - mvn $MAVEN_CLI_OPTS deploy
  only:
    - main
    - develop

pages:
  stage: deploy
  script:
    - mvn $MAVEN_CLI_OPTS clean site:site site:stage-deploy -DstagingSiteURL=file://$(pwd)/public -DtopSiteURL=https://www.ds-2.de/
  artifacts:
    paths:
      - public
  only:
    - main

# release:
#   stage: release
#   when:
#     - manual
#   rules:
#     - if: $CI_DEPLOY_FREEZE == null
#   needs:
#     - test
#   except:
#     - tags
#   script:
#     - mvn $MAVEN_CLI_OPTS release:clean release:prepare release:perform
#   only:
#     - releases/1.0
#   release:
#     name: "My awesome release"
#     tag_name: "v-$CI_COMMIT_TAG"
release:
  stage: release
  only:
    - release/v0.1
  when: manual
  before_script:
    - mkdir -p ~/.ssh/
#    - cp $DEPLOY_PRIVATE_KEY ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
    - cp .ssh-known-hosts ~/.ssh/known_hosts
#    - apt-get update && apt-get install -y git
    - git config --global user.email "noreply@gitlab.com"
    - git config --global user.name "GitLab CI"
    - git checkout -B "$CI_COMMIT_REF_NAME"
  script:
    - mvn $MAVEN_CLI_OPTS release:clean release:prepare release:perform
